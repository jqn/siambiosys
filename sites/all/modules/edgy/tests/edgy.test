<?php

/**
 * @file
 * Contains tests for Edgy
 */

/**
 * Class EdgyTestBase
 *
 * Base test class used for all functional test.
 */
class EdgyTestBase extends DrupalWebTestCase {

  /**
   * Helper method used to create node with paragraphs.
   *
   * @param string $type
   * @param string $paragraph_field
   * @param string $paragraph_bundle
   * @return array
   */
  public function createNodeWithParagraph($type = 'edgy_test_landing_page', $paragraph_field = 'field_edgy_test_paras', $paragraph_bundle = 'edgy_test_content') {
    $node = $this->drupalCreateNode(array('type' => $type));

    $entity = entity_create('paragraphs_item', array('bundle' => $paragraph_bundle, 'field_name' => $paragraph_field));
    $entity->field_edgy_test_body[LANGUAGE_NONE][0]['value'] = $this->randomString(100);
    $entity->setHostEntity('node', $node);
    $entity->save();

    return array($node, $entity);
  }
}

/**
 * Class EdgyTestTestFeatureCase
 *
 * Ensure that the test features has been installed.
 */
class EdgyTestTestFeatureCase extends EdgyTestBase {

  public static function getInfo() {
    return array(
      'name' => 'Test Edgy feature module',
      'description' => 'Ensure that the Edgy feature installs.',
      'group' => 'Edgy',
    );
  }

  public function setUp() {
    parent::setUp('edgy_node_test');
    // Log user in.
    $web_user = $this->drupalCreateUser(array('bypass node access', 'administer content types', 'administer paragraphs bundles'));
    $this->drupalLogin($web_user);
  }

  /**
   * Test content type stored in features.
   */
  public function testEdgyNodeType() {
    $node_types = node_type_get_types();
    $this->assertTrue(isset($node_types['edgy_test_landing_page']), 'Node type landing page is available.');
    // Go to test content type.
    $this->drupalGet('node/add/edgy-test-landing-page');
    $this->assertRaw('Paragraphs', 'Found paragraphs field');
  }

  /**
   * Test paragraph type and custom fields.
   */
  public function testEdgyCheckParagraph() {
    // Get to paragraphs admin page.
    $this->drupalGet('admin/structure/paragraphs');
    $this->assertText('Edgy test content (edgy_test_content)', 'Found test edgy paragraph');
    $this->assertText('Edgy test content (DS) (edgy_test_content_ds)', 'Found test edgy (DS) paragraph');
    // Ensure fields are present.
    $this->drupalGet('admin/structure/paragraphs/edgy-test-content/fields');
    $this->assertText('field_edgy_test_body', 'Found body field on edgy test paragraph');

    $this->drupalGet('admin/structure/paragraphs/edgy-test-content-ds/fields');
    $this->assertText('field_edgy_test_body', 'Found body field on edgy DS test paragraph');
  }
}

/**
 * Class EdgyTestBaseCase
 *
 * Test base class method.
 */
class EdgyTestBaseCase extends EdgyTestBase {

  public static function getInfo() {
    return array(
      'name' => 'Test edgy base PHP class',
      'description' => 'Ensure that the edgy base methods are tested.',
      'group' => 'Edgy',
    );
  }

  public function setUp() {
    parent::setUp('edgy_node_test');
  }

  /**
   * Test CreateNodeWithParagraph() method.
   */
  public function testCreateNodeWithParagraph() {
    list ($node, $entity) = $this->createNodeWithParagraph();

    $this->drupalGet('node/' . $node->nid);

    $class = $this->xpath('//*[contains(@class, "node-edgy-test-landing-page")]');
    $this->assertTrue(count($class) == 1, '.node-edgy-test-landing-page class found.');
  }
}

/**
 * Class EdgyTestBaseCase
 *
 * Test base class method.
 */
class EdgyTestCase extends EdgyTestBase {

  public static function getInfo() {
    return array(
      'name' => 'Test Edgy module',
      'description' => 'Test basic parts of the module.',
      'group' => 'Edgy',
    );
  }

  public function setUp() {
    parent::setUp('edgy_node_test');
  }

  /**
   * Test CreateNodeWithParagraph() method.
   */
  public function testContainerClassOnEntity() {
    list ($node, $entity) = $this->createNodeWithParagraph();
    $this->drupalGet('node/' . $node->nid);
    $class = $this->xpath('//div[contains(@class,"edgy-paragraphs-item")]//div[contains(@class,"container")]');
    $this->assertTrue(count($class) == 1, '.node-edgy-test-landing-page and .container class found.');
  }

  /**
   * Test CreateNodeWithParagraph() method.
   */
  public function testContainerClassOnDisplaySuiteEntity() {
    list ($node, $entity) = $this->createNodeWithParagraph('edgy_test_landing_page', 'field_edgy_test_paras', 'edgy_test_content_ds');
    $this->drupalGet('node/' . $node->nid);
    $class = $this->xpath('//div[contains(@class,"edgy-1col")]//div[contains(@class,"container")]');
    $this->assertTrue(count($class) == 1, '.edgy-1col, .node-edgy-test-landing-page and .container class found.');
  }

  /**
   * Test settings page.
   */
  public function testEdgySettingsPage() {
    $web_user = $this->drupalCreateUser(array('administer site configuration'));
    $this->drupalLogin($web_user);

    $this->drupalGet('admin/config/system/edgy');
    $this->assertText('Container class', 'Found container field.');
  }
}
